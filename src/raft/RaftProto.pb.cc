// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RaftProto.proto

#include "RaftProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_RaftProto_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_RaftProto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AppendEntriesRpc_Entry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_RaftProto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NodeEndpoint;
}  // namespace protobuf_RaftProto_2eproto
class NodeEndpointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeEndpoint>
      _instance;
} _NodeEndpoint_default_instance_;
class PreVoteRpcDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PreVoteRpc>
      _instance;
} _PreVoteRpc_default_instance_;
class PreVoteResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PreVoteResult>
      _instance;
} _PreVoteResult_default_instance_;
class RequestVoteRpcDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestVoteRpc>
      _instance;
} _RequestVoteRpc_default_instance_;
class RequestVoteResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestVoteResult>
      _instance;
} _RequestVoteResult_default_instance_;
class AppendEntriesRpc_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppendEntriesRpc_Entry>
      _instance;
} _AppendEntriesRpc_Entry_default_instance_;
class AppendEntriesRpcDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppendEntriesRpc>
      _instance;
} _AppendEntriesRpc_default_instance_;
class AppendEntriesResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppendEntriesResult>
      _instance;
} _AppendEntriesResult_default_instance_;
class InstallSnapshotRpcDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InstallSnapshotRpc>
      _instance;
} _InstallSnapshotRpc_default_instance_;
class InstallSnapshotResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InstallSnapshotResult>
      _instance;
} _InstallSnapshotResult_default_instance_;
class AddServerRpcDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddServerRpc>
      _instance;
} _AddServerRpc_default_instance_;
class AddServerResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddServerResult>
      _instance;
} _AddServerResult_default_instance_;
class RemoveServerRpcDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveServerRpc>
      _instance;
} _RemoveServerRpc_default_instance_;
class RemoveServerResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveServerResult>
      _instance;
} _RemoveServerResult_default_instance_;
class SnapshotHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapshotHeader>
      _instance;
} _SnapshotHeader_default_instance_;
namespace protobuf_RaftProto_2eproto {
static void InitDefaultsNodeEndpoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_NodeEndpoint_default_instance_;
    new (ptr) ::NodeEndpoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NodeEndpoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NodeEndpoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNodeEndpoint}, {}};

static void InitDefaultsPreVoteRpc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PreVoteRpc_default_instance_;
    new (ptr) ::PreVoteRpc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PreVoteRpc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PreVoteRpc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPreVoteRpc}, {}};

static void InitDefaultsPreVoteResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PreVoteResult_default_instance_;
    new (ptr) ::PreVoteResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PreVoteResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PreVoteResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPreVoteResult}, {}};

static void InitDefaultsRequestVoteRpc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RequestVoteRpc_default_instance_;
    new (ptr) ::RequestVoteRpc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RequestVoteRpc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RequestVoteRpc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequestVoteRpc}, {}};

static void InitDefaultsRequestVoteResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RequestVoteResult_default_instance_;
    new (ptr) ::RequestVoteResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RequestVoteResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RequestVoteResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequestVoteResult}, {}};

static void InitDefaultsAppendEntriesRpc_Entry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AppendEntriesRpc_Entry_default_instance_;
    new (ptr) ::AppendEntriesRpc_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AppendEntriesRpc_Entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AppendEntriesRpc_Entry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAppendEntriesRpc_Entry}, {}};

static void InitDefaultsAppendEntriesRpc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AppendEntriesRpc_default_instance_;
    new (ptr) ::AppendEntriesRpc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AppendEntriesRpc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AppendEntriesRpc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAppendEntriesRpc}, {
      &protobuf_RaftProto_2eproto::scc_info_AppendEntriesRpc_Entry.base,}};

static void InitDefaultsAppendEntriesResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AppendEntriesResult_default_instance_;
    new (ptr) ::AppendEntriesResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AppendEntriesResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AppendEntriesResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAppendEntriesResult}, {}};

static void InitDefaultsInstallSnapshotRpc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_InstallSnapshotRpc_default_instance_;
    new (ptr) ::InstallSnapshotRpc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InstallSnapshotRpc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InstallSnapshotRpc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInstallSnapshotRpc}, {
      &protobuf_RaftProto_2eproto::scc_info_NodeEndpoint.base,}};

static void InitDefaultsInstallSnapshotResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_InstallSnapshotResult_default_instance_;
    new (ptr) ::InstallSnapshotResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InstallSnapshotResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InstallSnapshotResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInstallSnapshotResult}, {}};

static void InitDefaultsAddServerRpc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AddServerRpc_default_instance_;
    new (ptr) ::AddServerRpc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AddServerRpc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddServerRpc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddServerRpc}, {
      &protobuf_RaftProto_2eproto::scc_info_NodeEndpoint.base,}};

static void InitDefaultsAddServerResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AddServerResult_default_instance_;
    new (ptr) ::AddServerResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AddServerResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddServerResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddServerResult}, {
      &protobuf_RaftProto_2eproto::scc_info_NodeEndpoint.base,}};

static void InitDefaultsRemoveServerRpc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RemoveServerRpc_default_instance_;
    new (ptr) ::RemoveServerRpc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RemoveServerRpc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RemoveServerRpc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRemoveServerRpc}, {
      &protobuf_RaftProto_2eproto::scc_info_NodeEndpoint.base,}};

static void InitDefaultsRemoveServerResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RemoveServerResult_default_instance_;
    new (ptr) ::RemoveServerResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RemoveServerResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RemoveServerResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRemoveServerResult}, {
      &protobuf_RaftProto_2eproto::scc_info_NodeEndpoint.base,}};

static void InitDefaultsSnapshotHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SnapshotHeader_default_instance_;
    new (ptr) ::SnapshotHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SnapshotHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SnapshotHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSnapshotHeader}, {
      &protobuf_RaftProto_2eproto::scc_info_NodeEndpoint.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_NodeEndpoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PreVoteRpc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PreVoteResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestVoteRpc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestVoteResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppendEntriesRpc_Entry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppendEntriesRpc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppendEntriesResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InstallSnapshotRpc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InstallSnapshotResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddServerRpc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddServerResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveServerRpc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveServerResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SnapshotHeader.base);
}

::google::protobuf::Metadata file_level_metadata[15];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NodeEndpoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NodeEndpoint, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NodeEndpoint, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NodeEndpoint, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PreVoteRpc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PreVoteRpc, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PreVoteRpc, last_log_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PreVoteRpc, last_log_term_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PreVoteResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PreVoteResult, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PreVoteResult, vote_granted_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestVoteRpc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestVoteRpc, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestVoteRpc, candidate_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestVoteRpc, last_log_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestVoteRpc, last_log_term_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestVoteResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestVoteResult, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestVoteResult, vote_granted_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesRpc_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesRpc_Entry, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesRpc_Entry, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesRpc_Entry, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesRpc_Entry, command_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesRpc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesRpc, message_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesRpc, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesRpc, leader_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesRpc, prev_log_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesRpc, prev_log_term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesRpc, leader_commit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesRpc, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesResult, rpc_message_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesResult, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AppendEntriesResult, success_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InstallSnapshotRpc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InstallSnapshotRpc, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InstallSnapshotRpc, leader_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InstallSnapshotRpc, last_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InstallSnapshotRpc, last_term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InstallSnapshotRpc, last_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InstallSnapshotRpc, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InstallSnapshotRpc, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InstallSnapshotRpc, done_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InstallSnapshotResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InstallSnapshotResult, term_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AddServerRpc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AddServerRpc, new_server_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AddServerResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AddServerResult, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AddServerResult, leader_hint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemoveServerRpc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemoveServerRpc, old_server_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemoveServerResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemoveServerResult, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemoveServerResult, leader_hint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SnapshotHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SnapshotHeader, last_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SnapshotHeader, last_term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SnapshotHeader, last_config_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NodeEndpoint)},
  { 8, -1, sizeof(::PreVoteRpc)},
  { 16, -1, sizeof(::PreVoteResult)},
  { 23, -1, sizeof(::RequestVoteRpc)},
  { 32, -1, sizeof(::RequestVoteResult)},
  { 39, -1, sizeof(::AppendEntriesRpc_Entry)},
  { 48, -1, sizeof(::AppendEntriesRpc)},
  { 60, -1, sizeof(::AppendEntriesResult)},
  { 68, -1, sizeof(::InstallSnapshotRpc)},
  { 81, -1, sizeof(::InstallSnapshotResult)},
  { 87, -1, sizeof(::AddServerRpc)},
  { 93, -1, sizeof(::AddServerResult)},
  { 100, -1, sizeof(::RemoveServerRpc)},
  { 106, -1, sizeof(::RemoveServerResult)},
  { 113, -1, sizeof(::SnapshotHeader)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NodeEndpoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PreVoteRpc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PreVoteResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RequestVoteRpc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RequestVoteResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AppendEntriesRpc_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AppendEntriesRpc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AppendEntriesResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_InstallSnapshotRpc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_InstallSnapshotResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AddServerRpc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AddServerResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RemoveServerRpc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RemoveServerResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SnapshotHeader_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "RaftProto.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017RaftProto.proto\"6\n\014NodeEndpoint\022\n\n\002id\030"
      "\001 \001(\t\022\014\n\004host\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\"I\n\nPre"
      "VoteRpc\022\014\n\004term\030\001 \001(\005\022\026\n\016last_log_index\030"
      "\002 \001(\005\022\025\n\rlast_log_term\030\004 \001(\005\"3\n\rPreVoteR"
      "esult\022\014\n\004term\030\001 \001(\005\022\024\n\014vote_granted\030\002 \001("
      "\010\"c\n\016RequestVoteRpc\022\014\n\004term\030\001 \001(\005\022\024\n\014can"
      "didate_id\030\002 \001(\t\022\026\n\016last_log_index\030\003 \001(\005\022"
      "\025\n\rlast_log_term\030\004 \001(\005\"7\n\021RequestVoteRes"
      "ult\022\014\n\004term\030\001 \001(\005\022\024\n\014vote_granted\030\002 \001(\010\""
      "\374\001\n\020AppendEntriesRpc\022\022\n\nmessage_id\030\001 \001(\t"
      "\022\014\n\004term\030\002 \001(\005\022\021\n\tleader_id\030\003 \001(\t\022\026\n\016pre"
      "v_log_index\030\004 \001(\005\022\025\n\rprev_log_term\030\005 \001(\005"
      "\022\025\n\rleader_commit\030\006 \001(\005\022(\n\007entries\030\007 \003(\013"
      "2\027.AppendEntriesRpc.Entry\032C\n\005Entry\022\014\n\004ki"
      "nd\030\001 \001(\005\022\r\n\005index\030\002 \001(\005\022\014\n\004term\030\003 \001(\005\022\017\n"
      "\007command\030\004 \001(\014\"L\n\023AppendEntriesResult\022\026\n"
      "\016rpc_message_id\030\001 \001(\t\022\014\n\004term\030\002 \001(\005\022\017\n\007s"
      "uccess\030\003 \001(\010\"\254\001\n\022InstallSnapshotRpc\022\014\n\004t"
      "erm\030\001 \001(\005\022\021\n\tleader_id\030\002 \001(\t\022\022\n\nlast_ind"
      "ex\030\003 \001(\005\022\021\n\tlast_term\030\004 \001(\005\022\"\n\013last_conf"
      "ig\030\005 \003(\0132\r.NodeEndpoint\022\016\n\006offset\030\006 \001(\005\022"
      "\014\n\004data\030\007 \001(\014\022\014\n\004done\030\010 \001(\010\"%\n\025InstallSn"
      "apshotResult\022\014\n\004term\030\001 \001(\005\"1\n\014AddServerR"
      "pc\022!\n\nnew_server\030\001 \001(\0132\r.NodeEndpoint\"E\n"
      "\017AddServerResult\022\016\n\006status\030\001 \001(\t\022\"\n\013lead"
      "er_hint\030\002 \001(\0132\r.NodeEndpoint\"4\n\017RemoveSe"
      "rverRpc\022!\n\nold_server\030\001 \001(\0132\r.NodeEndpoi"
      "nt\"H\n\022RemoveServerResult\022\016\n\006status\030\001 \001(\t"
      "\022\"\n\013leader_hint\030\002 \001(\0132\r.NodeEndpoint\"[\n\016"
      "SnapshotHeader\022\022\n\nlast_index\030\001 \001(\005\022\021\n\tla"
      "st_term\030\002 \001(\005\022\"\n\013last_config\030\003 \003(\0132\r.Nod"
      "eEndpointb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1257);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RaftProto.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_RaftProto_2eproto

// ===================================================================

void NodeEndpoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeEndpoint::kIdFieldNumber;
const int NodeEndpoint::kHostFieldNumber;
const int NodeEndpoint::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeEndpoint::NodeEndpoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_NodeEndpoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NodeEndpoint)
}
NodeEndpoint::NodeEndpoint(const NodeEndpoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host().size() > 0) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:NodeEndpoint)
}

void NodeEndpoint::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

NodeEndpoint::~NodeEndpoint() {
  // @@protoc_insertion_point(destructor:NodeEndpoint)
  SharedDtor();
}

void NodeEndpoint::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NodeEndpoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NodeEndpoint::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeEndpoint& NodeEndpoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_NodeEndpoint.base);
  return *internal_default_instance();
}


void NodeEndpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeEndpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  _internal_metadata_.Clear();
}

bool NodeEndpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NodeEndpoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NodeEndpoint.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NodeEndpoint.host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NodeEndpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NodeEndpoint)
  return false;
#undef DO_
}

void NodeEndpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NodeEndpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeEndpoint.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string host = 2;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeEndpoint.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host(), output);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NodeEndpoint)
}

::google::protobuf::uint8* NodeEndpoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NodeEndpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeEndpoint.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string host = 2;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NodeEndpoint.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host(), target);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NodeEndpoint)
  return target;
}

size_t NodeEndpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NodeEndpoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string host = 2;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // int32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeEndpoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NodeEndpoint)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeEndpoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeEndpoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NodeEndpoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NodeEndpoint)
    MergeFrom(*source);
  }
}

void NodeEndpoint::MergeFrom(const NodeEndpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NodeEndpoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void NodeEndpoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NodeEndpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeEndpoint::CopyFrom(const NodeEndpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeEndpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeEndpoint::IsInitialized() const {
  return true;
}

void NodeEndpoint::Swap(NodeEndpoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeEndpoint::InternalSwap(NodeEndpoint* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NodeEndpoint::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PreVoteRpc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PreVoteRpc::kTermFieldNumber;
const int PreVoteRpc::kLastLogIndexFieldNumber;
const int PreVoteRpc::kLastLogTermFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PreVoteRpc::PreVoteRpc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_PreVoteRpc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PreVoteRpc)
}
PreVoteRpc::PreVoteRpc(const PreVoteRpc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_log_term_) -
    reinterpret_cast<char*>(&term_)) + sizeof(last_log_term_));
  // @@protoc_insertion_point(copy_constructor:PreVoteRpc)
}

void PreVoteRpc::SharedCtor() {
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_log_term_) -
      reinterpret_cast<char*>(&term_)) + sizeof(last_log_term_));
}

PreVoteRpc::~PreVoteRpc() {
  // @@protoc_insertion_point(destructor:PreVoteRpc)
  SharedDtor();
}

void PreVoteRpc::SharedDtor() {
}

void PreVoteRpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PreVoteRpc::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PreVoteRpc& PreVoteRpc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_PreVoteRpc.base);
  return *internal_default_instance();
}


void PreVoteRpc::Clear() {
// @@protoc_insertion_point(message_clear_start:PreVoteRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_log_term_) -
      reinterpret_cast<char*>(&term_)) + sizeof(last_log_term_));
  _internal_metadata_.Clear();
}

bool PreVoteRpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PreVoteRpc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 term = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 last_log_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_log_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 last_log_term = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_log_term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PreVoteRpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PreVoteRpc)
  return false;
#undef DO_
}

void PreVoteRpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PreVoteRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->term(), output);
  }

  // int32 last_log_index = 2;
  if (this->last_log_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->last_log_index(), output);
  }

  // int32 last_log_term = 4;
  if (this->last_log_term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->last_log_term(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PreVoteRpc)
}

::google::protobuf::uint8* PreVoteRpc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PreVoteRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->term(), target);
  }

  // int32 last_log_index = 2;
  if (this->last_log_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->last_log_index(), target);
  }

  // int32 last_log_term = 4;
  if (this->last_log_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->last_log_term(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PreVoteRpc)
  return target;
}

size_t PreVoteRpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PreVoteRpc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 term = 1;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->term());
  }

  // int32 last_log_index = 2;
  if (this->last_log_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last_log_index());
  }

  // int32 last_log_term = 4;
  if (this->last_log_term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last_log_term());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreVoteRpc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PreVoteRpc)
  GOOGLE_DCHECK_NE(&from, this);
  const PreVoteRpc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PreVoteRpc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PreVoteRpc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PreVoteRpc)
    MergeFrom(*source);
  }
}

void PreVoteRpc::MergeFrom(const PreVoteRpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PreVoteRpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.term() != 0) {
    set_term(from.term());
  }
  if (from.last_log_index() != 0) {
    set_last_log_index(from.last_log_index());
  }
  if (from.last_log_term() != 0) {
    set_last_log_term(from.last_log_term());
  }
}

void PreVoteRpc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PreVoteRpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreVoteRpc::CopyFrom(const PreVoteRpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PreVoteRpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreVoteRpc::IsInitialized() const {
  return true;
}

void PreVoteRpc::Swap(PreVoteRpc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PreVoteRpc::InternalSwap(PreVoteRpc* other) {
  using std::swap;
  swap(term_, other->term_);
  swap(last_log_index_, other->last_log_index_);
  swap(last_log_term_, other->last_log_term_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PreVoteRpc::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PreVoteResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PreVoteResult::kTermFieldNumber;
const int PreVoteResult::kVoteGrantedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PreVoteResult::PreVoteResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_PreVoteResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PreVoteResult)
}
PreVoteResult::PreVoteResult(const PreVoteResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&vote_granted_) -
    reinterpret_cast<char*>(&term_)) + sizeof(vote_granted_));
  // @@protoc_insertion_point(copy_constructor:PreVoteResult)
}

void PreVoteResult::SharedCtor() {
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vote_granted_) -
      reinterpret_cast<char*>(&term_)) + sizeof(vote_granted_));
}

PreVoteResult::~PreVoteResult() {
  // @@protoc_insertion_point(destructor:PreVoteResult)
  SharedDtor();
}

void PreVoteResult::SharedDtor() {
}

void PreVoteResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PreVoteResult::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PreVoteResult& PreVoteResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_PreVoteResult.base);
  return *internal_default_instance();
}


void PreVoteResult::Clear() {
// @@protoc_insertion_point(message_clear_start:PreVoteResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vote_granted_) -
      reinterpret_cast<char*>(&term_)) + sizeof(vote_granted_));
  _internal_metadata_.Clear();
}

bool PreVoteResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PreVoteResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 term = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool vote_granted = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vote_granted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PreVoteResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PreVoteResult)
  return false;
#undef DO_
}

void PreVoteResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PreVoteResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->term(), output);
  }

  // bool vote_granted = 2;
  if (this->vote_granted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->vote_granted(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PreVoteResult)
}

::google::protobuf::uint8* PreVoteResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PreVoteResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->term(), target);
  }

  // bool vote_granted = 2;
  if (this->vote_granted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->vote_granted(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PreVoteResult)
  return target;
}

size_t PreVoteResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PreVoteResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 term = 1;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->term());
  }

  // bool vote_granted = 2;
  if (this->vote_granted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreVoteResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PreVoteResult)
  GOOGLE_DCHECK_NE(&from, this);
  const PreVoteResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PreVoteResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PreVoteResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PreVoteResult)
    MergeFrom(*source);
  }
}

void PreVoteResult::MergeFrom(const PreVoteResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PreVoteResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.term() != 0) {
    set_term(from.term());
  }
  if (from.vote_granted() != 0) {
    set_vote_granted(from.vote_granted());
  }
}

void PreVoteResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PreVoteResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreVoteResult::CopyFrom(const PreVoteResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PreVoteResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreVoteResult::IsInitialized() const {
  return true;
}

void PreVoteResult::Swap(PreVoteResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PreVoteResult::InternalSwap(PreVoteResult* other) {
  using std::swap;
  swap(term_, other->term_);
  swap(vote_granted_, other->vote_granted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PreVoteResult::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RequestVoteRpc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestVoteRpc::kTermFieldNumber;
const int RequestVoteRpc::kCandidateIdFieldNumber;
const int RequestVoteRpc::kLastLogIndexFieldNumber;
const int RequestVoteRpc::kLastLogTermFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestVoteRpc::RequestVoteRpc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_RequestVoteRpc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RequestVoteRpc)
}
RequestVoteRpc::RequestVoteRpc(const RequestVoteRpc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  candidate_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.candidate_id().size() > 0) {
    candidate_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.candidate_id_);
  }
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_log_term_) -
    reinterpret_cast<char*>(&term_)) + sizeof(last_log_term_));
  // @@protoc_insertion_point(copy_constructor:RequestVoteRpc)
}

void RequestVoteRpc::SharedCtor() {
  candidate_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_log_term_) -
      reinterpret_cast<char*>(&term_)) + sizeof(last_log_term_));
}

RequestVoteRpc::~RequestVoteRpc() {
  // @@protoc_insertion_point(destructor:RequestVoteRpc)
  SharedDtor();
}

void RequestVoteRpc::SharedDtor() {
  candidate_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestVoteRpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RequestVoteRpc::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestVoteRpc& RequestVoteRpc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_RequestVoteRpc.base);
  return *internal_default_instance();
}


void RequestVoteRpc::Clear() {
// @@protoc_insertion_point(message_clear_start:RequestVoteRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  candidate_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_log_term_) -
      reinterpret_cast<char*>(&term_)) + sizeof(last_log_term_));
  _internal_metadata_.Clear();
}

bool RequestVoteRpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RequestVoteRpc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 term = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string candidate_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_candidate_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->candidate_id().data(), static_cast<int>(this->candidate_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestVoteRpc.candidate_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 last_log_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_log_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 last_log_term = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_log_term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RequestVoteRpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RequestVoteRpc)
  return false;
#undef DO_
}

void RequestVoteRpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RequestVoteRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->term(), output);
  }

  // string candidate_id = 2;
  if (this->candidate_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->candidate_id().data(), static_cast<int>(this->candidate_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestVoteRpc.candidate_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->candidate_id(), output);
  }

  // int32 last_log_index = 3;
  if (this->last_log_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->last_log_index(), output);
  }

  // int32 last_log_term = 4;
  if (this->last_log_term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->last_log_term(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RequestVoteRpc)
}

::google::protobuf::uint8* RequestVoteRpc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RequestVoteRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->term(), target);
  }

  // string candidate_id = 2;
  if (this->candidate_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->candidate_id().data(), static_cast<int>(this->candidate_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestVoteRpc.candidate_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->candidate_id(), target);
  }

  // int32 last_log_index = 3;
  if (this->last_log_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->last_log_index(), target);
  }

  // int32 last_log_term = 4;
  if (this->last_log_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->last_log_term(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RequestVoteRpc)
  return target;
}

size_t RequestVoteRpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RequestVoteRpc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string candidate_id = 2;
  if (this->candidate_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->candidate_id());
  }

  // int32 term = 1;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->term());
  }

  // int32 last_log_index = 3;
  if (this->last_log_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last_log_index());
  }

  // int32 last_log_term = 4;
  if (this->last_log_term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last_log_term());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestVoteRpc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RequestVoteRpc)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestVoteRpc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestVoteRpc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RequestVoteRpc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RequestVoteRpc)
    MergeFrom(*source);
  }
}

void RequestVoteRpc::MergeFrom(const RequestVoteRpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RequestVoteRpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.candidate_id().size() > 0) {

    candidate_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.candidate_id_);
  }
  if (from.term() != 0) {
    set_term(from.term());
  }
  if (from.last_log_index() != 0) {
    set_last_log_index(from.last_log_index());
  }
  if (from.last_log_term() != 0) {
    set_last_log_term(from.last_log_term());
  }
}

void RequestVoteRpc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RequestVoteRpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestVoteRpc::CopyFrom(const RequestVoteRpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RequestVoteRpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestVoteRpc::IsInitialized() const {
  return true;
}

void RequestVoteRpc::Swap(RequestVoteRpc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestVoteRpc::InternalSwap(RequestVoteRpc* other) {
  using std::swap;
  candidate_id_.Swap(&other->candidate_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(term_, other->term_);
  swap(last_log_index_, other->last_log_index_);
  swap(last_log_term_, other->last_log_term_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RequestVoteRpc::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RequestVoteResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestVoteResult::kTermFieldNumber;
const int RequestVoteResult::kVoteGrantedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestVoteResult::RequestVoteResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_RequestVoteResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RequestVoteResult)
}
RequestVoteResult::RequestVoteResult(const RequestVoteResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&vote_granted_) -
    reinterpret_cast<char*>(&term_)) + sizeof(vote_granted_));
  // @@protoc_insertion_point(copy_constructor:RequestVoteResult)
}

void RequestVoteResult::SharedCtor() {
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vote_granted_) -
      reinterpret_cast<char*>(&term_)) + sizeof(vote_granted_));
}

RequestVoteResult::~RequestVoteResult() {
  // @@protoc_insertion_point(destructor:RequestVoteResult)
  SharedDtor();
}

void RequestVoteResult::SharedDtor() {
}

void RequestVoteResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RequestVoteResult::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestVoteResult& RequestVoteResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_RequestVoteResult.base);
  return *internal_default_instance();
}


void RequestVoteResult::Clear() {
// @@protoc_insertion_point(message_clear_start:RequestVoteResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vote_granted_) -
      reinterpret_cast<char*>(&term_)) + sizeof(vote_granted_));
  _internal_metadata_.Clear();
}

bool RequestVoteResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RequestVoteResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 term = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool vote_granted = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vote_granted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RequestVoteResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RequestVoteResult)
  return false;
#undef DO_
}

void RequestVoteResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RequestVoteResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->term(), output);
  }

  // bool vote_granted = 2;
  if (this->vote_granted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->vote_granted(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RequestVoteResult)
}

::google::protobuf::uint8* RequestVoteResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RequestVoteResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->term(), target);
  }

  // bool vote_granted = 2;
  if (this->vote_granted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->vote_granted(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RequestVoteResult)
  return target;
}

size_t RequestVoteResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RequestVoteResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 term = 1;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->term());
  }

  // bool vote_granted = 2;
  if (this->vote_granted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestVoteResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RequestVoteResult)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestVoteResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestVoteResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RequestVoteResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RequestVoteResult)
    MergeFrom(*source);
  }
}

void RequestVoteResult::MergeFrom(const RequestVoteResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RequestVoteResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.term() != 0) {
    set_term(from.term());
  }
  if (from.vote_granted() != 0) {
    set_vote_granted(from.vote_granted());
  }
}

void RequestVoteResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RequestVoteResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestVoteResult::CopyFrom(const RequestVoteResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RequestVoteResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestVoteResult::IsInitialized() const {
  return true;
}

void RequestVoteResult::Swap(RequestVoteResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestVoteResult::InternalSwap(RequestVoteResult* other) {
  using std::swap;
  swap(term_, other->term_);
  swap(vote_granted_, other->vote_granted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RequestVoteResult::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppendEntriesRpc_Entry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppendEntriesRpc_Entry::kKindFieldNumber;
const int AppendEntriesRpc_Entry::kIndexFieldNumber;
const int AppendEntriesRpc_Entry::kTermFieldNumber;
const int AppendEntriesRpc_Entry::kCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppendEntriesRpc_Entry::AppendEntriesRpc_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_AppendEntriesRpc_Entry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AppendEntriesRpc.Entry)
}
AppendEntriesRpc_Entry::AppendEntriesRpc_Entry(const AppendEntriesRpc_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command().size() > 0) {
    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  ::memcpy(&kind_, &from.kind_,
    static_cast<size_t>(reinterpret_cast<char*>(&term_) -
    reinterpret_cast<char*>(&kind_)) + sizeof(term_));
  // @@protoc_insertion_point(copy_constructor:AppendEntriesRpc.Entry)
}

void AppendEntriesRpc_Entry::SharedCtor() {
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&term_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(term_));
}

AppendEntriesRpc_Entry::~AppendEntriesRpc_Entry() {
  // @@protoc_insertion_point(destructor:AppendEntriesRpc.Entry)
  SharedDtor();
}

void AppendEntriesRpc_Entry::SharedDtor() {
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppendEntriesRpc_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AppendEntriesRpc_Entry::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppendEntriesRpc_Entry& AppendEntriesRpc_Entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_AppendEntriesRpc_Entry.base);
  return *internal_default_instance();
}


void AppendEntriesRpc_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:AppendEntriesRpc.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&term_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(term_));
  _internal_metadata_.Clear();
}

bool AppendEntriesRpc_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AppendEntriesRpc.Entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 term = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes command = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_command()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AppendEntriesRpc.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AppendEntriesRpc.Entry)
  return false;
#undef DO_
}

void AppendEntriesRpc_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AppendEntriesRpc.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->kind(), output);
  }

  // int32 index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }

  // int32 term = 3;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->term(), output);
  }

  // bytes command = 4;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->command(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AppendEntriesRpc.Entry)
}

::google::protobuf::uint8* AppendEntriesRpc_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AppendEntriesRpc.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->kind(), target);
  }

  // int32 index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }

  // int32 term = 3;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->term(), target);
  }

  // bytes command = 4;
  if (this->command().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->command(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AppendEntriesRpc.Entry)
  return target;
}

size_t AppendEntriesRpc_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AppendEntriesRpc.Entry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes command = 4;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->command());
  }

  // int32 kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kind());
  }

  // int32 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // int32 term = 3;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->term());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppendEntriesRpc_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AppendEntriesRpc.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const AppendEntriesRpc_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppendEntriesRpc_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AppendEntriesRpc.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AppendEntriesRpc.Entry)
    MergeFrom(*source);
  }
}

void AppendEntriesRpc_Entry::MergeFrom(const AppendEntriesRpc_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AppendEntriesRpc.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {

    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.term() != 0) {
    set_term(from.term());
  }
}

void AppendEntriesRpc_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AppendEntriesRpc.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppendEntriesRpc_Entry::CopyFrom(const AppendEntriesRpc_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AppendEntriesRpc.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppendEntriesRpc_Entry::IsInitialized() const {
  return true;
}

void AppendEntriesRpc_Entry::Swap(AppendEntriesRpc_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppendEntriesRpc_Entry::InternalSwap(AppendEntriesRpc_Entry* other) {
  using std::swap;
  command_.Swap(&other->command_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(kind_, other->kind_);
  swap(index_, other->index_);
  swap(term_, other->term_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppendEntriesRpc_Entry::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppendEntriesRpc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppendEntriesRpc::kMessageIdFieldNumber;
const int AppendEntriesRpc::kTermFieldNumber;
const int AppendEntriesRpc::kLeaderIdFieldNumber;
const int AppendEntriesRpc::kPrevLogIndexFieldNumber;
const int AppendEntriesRpc::kPrevLogTermFieldNumber;
const int AppendEntriesRpc::kLeaderCommitFieldNumber;
const int AppendEntriesRpc::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppendEntriesRpc::AppendEntriesRpc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_AppendEntriesRpc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AppendEntriesRpc)
}
AppendEntriesRpc::AppendEntriesRpc(const AppendEntriesRpc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message_id().size() > 0) {
    message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_id_);
  }
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.leader_id().size() > 0) {
    leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
  }
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&leader_commit_) -
    reinterpret_cast<char*>(&term_)) + sizeof(leader_commit_));
  // @@protoc_insertion_point(copy_constructor:AppendEntriesRpc)
}

void AppendEntriesRpc::SharedCtor() {
  message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leader_commit_) -
      reinterpret_cast<char*>(&term_)) + sizeof(leader_commit_));
}

AppendEntriesRpc::~AppendEntriesRpc() {
  // @@protoc_insertion_point(destructor:AppendEntriesRpc)
  SharedDtor();
}

void AppendEntriesRpc::SharedDtor() {
  message_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppendEntriesRpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AppendEntriesRpc::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppendEntriesRpc& AppendEntriesRpc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_AppendEntriesRpc.base);
  return *internal_default_instance();
}


void AppendEntriesRpc::Clear() {
// @@protoc_insertion_point(message_clear_start:AppendEntriesRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  message_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leader_commit_) -
      reinterpret_cast<char*>(&term_)) + sizeof(leader_commit_));
  _internal_metadata_.Clear();
}

bool AppendEntriesRpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AppendEntriesRpc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message_id().data(), static_cast<int>(this->message_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AppendEntriesRpc.message_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 term = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string leader_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->leader_id().data(), static_cast<int>(this->leader_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AppendEntriesRpc.leader_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 prev_log_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prev_log_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 prev_log_term = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prev_log_term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 leader_commit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leader_commit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AppendEntriesRpc.Entry entries = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AppendEntriesRpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AppendEntriesRpc)
  return false;
#undef DO_
}

void AppendEntriesRpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AppendEntriesRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message_id = 1;
  if (this->message_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_id().data(), static_cast<int>(this->message_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AppendEntriesRpc.message_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message_id(), output);
  }

  // int32 term = 2;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->term(), output);
  }

  // string leader_id = 3;
  if (this->leader_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AppendEntriesRpc.leader_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->leader_id(), output);
  }

  // int32 prev_log_index = 4;
  if (this->prev_log_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->prev_log_index(), output);
  }

  // int32 prev_log_term = 5;
  if (this->prev_log_term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->prev_log_term(), output);
  }

  // int32 leader_commit = 6;
  if (this->leader_commit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->leader_commit(), output);
  }

  // repeated .AppendEntriesRpc.Entry entries = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->entries(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AppendEntriesRpc)
}

::google::protobuf::uint8* AppendEntriesRpc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AppendEntriesRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message_id = 1;
  if (this->message_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_id().data(), static_cast<int>(this->message_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AppendEntriesRpc.message_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message_id(), target);
  }

  // int32 term = 2;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->term(), target);
  }

  // string leader_id = 3;
  if (this->leader_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AppendEntriesRpc.leader_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->leader_id(), target);
  }

  // int32 prev_log_index = 4;
  if (this->prev_log_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->prev_log_index(), target);
  }

  // int32 prev_log_term = 5;
  if (this->prev_log_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->prev_log_term(), target);
  }

  // int32 leader_commit = 6;
  if (this->leader_commit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->leader_commit(), target);
  }

  // repeated .AppendEntriesRpc.Entry entries = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AppendEntriesRpc)
  return target;
}

size_t AppendEntriesRpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AppendEntriesRpc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AppendEntriesRpc.Entry entries = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // string message_id = 1;
  if (this->message_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_id());
  }

  // string leader_id = 3;
  if (this->leader_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_id());
  }

  // int32 term = 2;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->term());
  }

  // int32 prev_log_index = 4;
  if (this->prev_log_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->prev_log_index());
  }

  // int32 prev_log_term = 5;
  if (this->prev_log_term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->prev_log_term());
  }

  // int32 leader_commit = 6;
  if (this->leader_commit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->leader_commit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppendEntriesRpc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AppendEntriesRpc)
  GOOGLE_DCHECK_NE(&from, this);
  const AppendEntriesRpc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppendEntriesRpc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AppendEntriesRpc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AppendEntriesRpc)
    MergeFrom(*source);
  }
}

void AppendEntriesRpc::MergeFrom(const AppendEntriesRpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AppendEntriesRpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.message_id().size() > 0) {

    message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_id_);
  }
  if (from.leader_id().size() > 0) {

    leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
  }
  if (from.term() != 0) {
    set_term(from.term());
  }
  if (from.prev_log_index() != 0) {
    set_prev_log_index(from.prev_log_index());
  }
  if (from.prev_log_term() != 0) {
    set_prev_log_term(from.prev_log_term());
  }
  if (from.leader_commit() != 0) {
    set_leader_commit(from.leader_commit());
  }
}

void AppendEntriesRpc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AppendEntriesRpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppendEntriesRpc::CopyFrom(const AppendEntriesRpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AppendEntriesRpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppendEntriesRpc::IsInitialized() const {
  return true;
}

void AppendEntriesRpc::Swap(AppendEntriesRpc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppendEntriesRpc::InternalSwap(AppendEntriesRpc* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  message_id_.Swap(&other->message_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  leader_id_.Swap(&other->leader_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(term_, other->term_);
  swap(prev_log_index_, other->prev_log_index_);
  swap(prev_log_term_, other->prev_log_term_);
  swap(leader_commit_, other->leader_commit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppendEntriesRpc::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppendEntriesResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppendEntriesResult::kRpcMessageIdFieldNumber;
const int AppendEntriesResult::kTermFieldNumber;
const int AppendEntriesResult::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppendEntriesResult::AppendEntriesResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_AppendEntriesResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AppendEntriesResult)
}
AppendEntriesResult::AppendEntriesResult(const AppendEntriesResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rpc_message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rpc_message_id().size() > 0) {
    rpc_message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rpc_message_id_);
  }
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&term_)) + sizeof(success_));
  // @@protoc_insertion_point(copy_constructor:AppendEntriesResult)
}

void AppendEntriesResult::SharedCtor() {
  rpc_message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&term_)) + sizeof(success_));
}

AppendEntriesResult::~AppendEntriesResult() {
  // @@protoc_insertion_point(destructor:AppendEntriesResult)
  SharedDtor();
}

void AppendEntriesResult::SharedDtor() {
  rpc_message_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppendEntriesResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AppendEntriesResult::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppendEntriesResult& AppendEntriesResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_AppendEntriesResult.base);
  return *internal_default_instance();
}


void AppendEntriesResult::Clear() {
// @@protoc_insertion_point(message_clear_start:AppendEntriesResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rpc_message_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&term_)) + sizeof(success_));
  _internal_metadata_.Clear();
}

bool AppendEntriesResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AppendEntriesResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string rpc_message_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rpc_message_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rpc_message_id().data(), static_cast<int>(this->rpc_message_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AppendEntriesResult.rpc_message_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 term = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AppendEntriesResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AppendEntriesResult)
  return false;
#undef DO_
}

void AppendEntriesResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AppendEntriesResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rpc_message_id = 1;
  if (this->rpc_message_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rpc_message_id().data(), static_cast<int>(this->rpc_message_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AppendEntriesResult.rpc_message_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->rpc_message_id(), output);
  }

  // int32 term = 2;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->term(), output);
  }

  // bool success = 3;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->success(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AppendEntriesResult)
}

::google::protobuf::uint8* AppendEntriesResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AppendEntriesResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rpc_message_id = 1;
  if (this->rpc_message_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rpc_message_id().data(), static_cast<int>(this->rpc_message_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AppendEntriesResult.rpc_message_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rpc_message_id(), target);
  }

  // int32 term = 2;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->term(), target);
  }

  // bool success = 3;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->success(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AppendEntriesResult)
  return target;
}

size_t AppendEntriesResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AppendEntriesResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string rpc_message_id = 1;
  if (this->rpc_message_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rpc_message_id());
  }

  // int32 term = 2;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->term());
  }

  // bool success = 3;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppendEntriesResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AppendEntriesResult)
  GOOGLE_DCHECK_NE(&from, this);
  const AppendEntriesResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppendEntriesResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AppendEntriesResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AppendEntriesResult)
    MergeFrom(*source);
  }
}

void AppendEntriesResult::MergeFrom(const AppendEntriesResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AppendEntriesResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rpc_message_id().size() > 0) {

    rpc_message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rpc_message_id_);
  }
  if (from.term() != 0) {
    set_term(from.term());
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void AppendEntriesResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AppendEntriesResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppendEntriesResult::CopyFrom(const AppendEntriesResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AppendEntriesResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppendEntriesResult::IsInitialized() const {
  return true;
}

void AppendEntriesResult::Swap(AppendEntriesResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppendEntriesResult::InternalSwap(AppendEntriesResult* other) {
  using std::swap;
  rpc_message_id_.Swap(&other->rpc_message_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(term_, other->term_);
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppendEntriesResult::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InstallSnapshotRpc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstallSnapshotRpc::kTermFieldNumber;
const int InstallSnapshotRpc::kLeaderIdFieldNumber;
const int InstallSnapshotRpc::kLastIndexFieldNumber;
const int InstallSnapshotRpc::kLastTermFieldNumber;
const int InstallSnapshotRpc::kLastConfigFieldNumber;
const int InstallSnapshotRpc::kOffsetFieldNumber;
const int InstallSnapshotRpc::kDataFieldNumber;
const int InstallSnapshotRpc::kDoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstallSnapshotRpc::InstallSnapshotRpc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_InstallSnapshotRpc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:InstallSnapshotRpc)
}
InstallSnapshotRpc::InstallSnapshotRpc(const InstallSnapshotRpc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      last_config_(from.last_config_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.leader_id().size() > 0) {
    leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&done_) -
    reinterpret_cast<char*>(&term_)) + sizeof(done_));
  // @@protoc_insertion_point(copy_constructor:InstallSnapshotRpc)
}

void InstallSnapshotRpc::SharedCtor() {
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&done_) -
      reinterpret_cast<char*>(&term_)) + sizeof(done_));
}

InstallSnapshotRpc::~InstallSnapshotRpc() {
  // @@protoc_insertion_point(destructor:InstallSnapshotRpc)
  SharedDtor();
}

void InstallSnapshotRpc::SharedDtor() {
  leader_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InstallSnapshotRpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InstallSnapshotRpc::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InstallSnapshotRpc& InstallSnapshotRpc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_InstallSnapshotRpc.base);
  return *internal_default_instance();
}


void InstallSnapshotRpc::Clear() {
// @@protoc_insertion_point(message_clear_start:InstallSnapshotRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  last_config_.Clear();
  leader_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&done_) -
      reinterpret_cast<char*>(&term_)) + sizeof(done_));
  _internal_metadata_.Clear();
}

bool InstallSnapshotRpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InstallSnapshotRpc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 term = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string leader_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->leader_id().data(), static_cast<int>(this->leader_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "InstallSnapshotRpc.leader_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 last_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 last_term = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NodeEndpoint last_config = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_last_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 offset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool done = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &done_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InstallSnapshotRpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InstallSnapshotRpc)
  return false;
#undef DO_
}

void InstallSnapshotRpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InstallSnapshotRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->term(), output);
  }

  // string leader_id = 2;
  if (this->leader_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "InstallSnapshotRpc.leader_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->leader_id(), output);
  }

  // int32 last_index = 3;
  if (this->last_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->last_index(), output);
  }

  // int32 last_term = 4;
  if (this->last_term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->last_term(), output);
  }

  // repeated .NodeEndpoint last_config = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->last_config_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->last_config(static_cast<int>(i)),
      output);
  }

  // int32 offset = 6;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->offset(), output);
  }

  // bytes data = 7;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->data(), output);
  }

  // bool done = 8;
  if (this->done() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->done(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:InstallSnapshotRpc)
}

::google::protobuf::uint8* InstallSnapshotRpc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:InstallSnapshotRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->term(), target);
  }

  // string leader_id = 2;
  if (this->leader_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "InstallSnapshotRpc.leader_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->leader_id(), target);
  }

  // int32 last_index = 3;
  if (this->last_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->last_index(), target);
  }

  // int32 last_term = 4;
  if (this->last_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->last_term(), target);
  }

  // repeated .NodeEndpoint last_config = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->last_config_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->last_config(static_cast<int>(i)), deterministic, target);
  }

  // int32 offset = 6;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->offset(), target);
  }

  // bytes data = 7;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->data(), target);
  }

  // bool done = 8;
  if (this->done() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->done(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InstallSnapshotRpc)
  return target;
}

size_t InstallSnapshotRpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InstallSnapshotRpc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NodeEndpoint last_config = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->last_config_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->last_config(static_cast<int>(i)));
    }
  }

  // string leader_id = 2;
  if (this->leader_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_id());
  }

  // bytes data = 7;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int32 term = 1;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->term());
  }

  // int32 last_index = 3;
  if (this->last_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last_index());
  }

  // int32 last_term = 4;
  if (this->last_term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last_term());
  }

  // int32 offset = 6;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  // bool done = 8;
  if (this->done() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstallSnapshotRpc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InstallSnapshotRpc)
  GOOGLE_DCHECK_NE(&from, this);
  const InstallSnapshotRpc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InstallSnapshotRpc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InstallSnapshotRpc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InstallSnapshotRpc)
    MergeFrom(*source);
  }
}

void InstallSnapshotRpc::MergeFrom(const InstallSnapshotRpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InstallSnapshotRpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  last_config_.MergeFrom(from.last_config_);
  if (from.leader_id().size() > 0) {

    leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.term() != 0) {
    set_term(from.term());
  }
  if (from.last_index() != 0) {
    set_last_index(from.last_index());
  }
  if (from.last_term() != 0) {
    set_last_term(from.last_term());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.done() != 0) {
    set_done(from.done());
  }
}

void InstallSnapshotRpc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InstallSnapshotRpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstallSnapshotRpc::CopyFrom(const InstallSnapshotRpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InstallSnapshotRpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstallSnapshotRpc::IsInitialized() const {
  return true;
}

void InstallSnapshotRpc::Swap(InstallSnapshotRpc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstallSnapshotRpc::InternalSwap(InstallSnapshotRpc* other) {
  using std::swap;
  CastToBase(&last_config_)->InternalSwap(CastToBase(&other->last_config_));
  leader_id_.Swap(&other->leader_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(term_, other->term_);
  swap(last_index_, other->last_index_);
  swap(last_term_, other->last_term_);
  swap(offset_, other->offset_);
  swap(done_, other->done_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InstallSnapshotRpc::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InstallSnapshotResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstallSnapshotResult::kTermFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstallSnapshotResult::InstallSnapshotResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_InstallSnapshotResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:InstallSnapshotResult)
}
InstallSnapshotResult::InstallSnapshotResult(const InstallSnapshotResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  term_ = from.term_;
  // @@protoc_insertion_point(copy_constructor:InstallSnapshotResult)
}

void InstallSnapshotResult::SharedCtor() {
  term_ = 0;
}

InstallSnapshotResult::~InstallSnapshotResult() {
  // @@protoc_insertion_point(destructor:InstallSnapshotResult)
  SharedDtor();
}

void InstallSnapshotResult::SharedDtor() {
}

void InstallSnapshotResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InstallSnapshotResult::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InstallSnapshotResult& InstallSnapshotResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_InstallSnapshotResult.base);
  return *internal_default_instance();
}


void InstallSnapshotResult::Clear() {
// @@protoc_insertion_point(message_clear_start:InstallSnapshotResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  term_ = 0;
  _internal_metadata_.Clear();
}

bool InstallSnapshotResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InstallSnapshotResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 term = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InstallSnapshotResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InstallSnapshotResult)
  return false;
#undef DO_
}

void InstallSnapshotResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InstallSnapshotResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->term(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:InstallSnapshotResult)
}

::google::protobuf::uint8* InstallSnapshotResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:InstallSnapshotResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->term(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InstallSnapshotResult)
  return target;
}

size_t InstallSnapshotResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InstallSnapshotResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 term = 1;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->term());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstallSnapshotResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InstallSnapshotResult)
  GOOGLE_DCHECK_NE(&from, this);
  const InstallSnapshotResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InstallSnapshotResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InstallSnapshotResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InstallSnapshotResult)
    MergeFrom(*source);
  }
}

void InstallSnapshotResult::MergeFrom(const InstallSnapshotResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InstallSnapshotResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.term() != 0) {
    set_term(from.term());
  }
}

void InstallSnapshotResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InstallSnapshotResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstallSnapshotResult::CopyFrom(const InstallSnapshotResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InstallSnapshotResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstallSnapshotResult::IsInitialized() const {
  return true;
}

void InstallSnapshotResult::Swap(InstallSnapshotResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstallSnapshotResult::InternalSwap(InstallSnapshotResult* other) {
  using std::swap;
  swap(term_, other->term_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InstallSnapshotResult::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddServerRpc::InitAsDefaultInstance() {
  ::_AddServerRpc_default_instance_._instance.get_mutable()->new_server_ = const_cast< ::NodeEndpoint*>(
      ::NodeEndpoint::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddServerRpc::kNewServerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddServerRpc::AddServerRpc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_AddServerRpc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AddServerRpc)
}
AddServerRpc::AddServerRpc(const AddServerRpc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_new_server()) {
    new_server_ = new ::NodeEndpoint(*from.new_server_);
  } else {
    new_server_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:AddServerRpc)
}

void AddServerRpc::SharedCtor() {
  new_server_ = NULL;
}

AddServerRpc::~AddServerRpc() {
  // @@protoc_insertion_point(destructor:AddServerRpc)
  SharedDtor();
}

void AddServerRpc::SharedDtor() {
  if (this != internal_default_instance()) delete new_server_;
}

void AddServerRpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddServerRpc::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddServerRpc& AddServerRpc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_AddServerRpc.base);
  return *internal_default_instance();
}


void AddServerRpc::Clear() {
// @@protoc_insertion_point(message_clear_start:AddServerRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && new_server_ != NULL) {
    delete new_server_;
  }
  new_server_ = NULL;
  _internal_metadata_.Clear();
}

bool AddServerRpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AddServerRpc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NodeEndpoint new_server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_new_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AddServerRpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AddServerRpc)
  return false;
#undef DO_
}

void AddServerRpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AddServerRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NodeEndpoint new_server = 1;
  if (this->has_new_server()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_new_server(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AddServerRpc)
}

::google::protobuf::uint8* AddServerRpc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AddServerRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NodeEndpoint new_server = 1;
  if (this->has_new_server()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_new_server(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AddServerRpc)
  return target;
}

size_t AddServerRpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AddServerRpc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NodeEndpoint new_server = 1;
  if (this->has_new_server()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *new_server_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddServerRpc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AddServerRpc)
  GOOGLE_DCHECK_NE(&from, this);
  const AddServerRpc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddServerRpc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AddServerRpc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AddServerRpc)
    MergeFrom(*source);
  }
}

void AddServerRpc::MergeFrom(const AddServerRpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AddServerRpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_new_server()) {
    mutable_new_server()->::NodeEndpoint::MergeFrom(from.new_server());
  }
}

void AddServerRpc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AddServerRpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddServerRpc::CopyFrom(const AddServerRpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AddServerRpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddServerRpc::IsInitialized() const {
  return true;
}

void AddServerRpc::Swap(AddServerRpc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddServerRpc::InternalSwap(AddServerRpc* other) {
  using std::swap;
  swap(new_server_, other->new_server_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddServerRpc::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddServerResult::InitAsDefaultInstance() {
  ::_AddServerResult_default_instance_._instance.get_mutable()->leader_hint_ = const_cast< ::NodeEndpoint*>(
      ::NodeEndpoint::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddServerResult::kStatusFieldNumber;
const int AddServerResult::kLeaderHintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddServerResult::AddServerResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_AddServerResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AddServerResult)
}
AddServerResult::AddServerResult(const AddServerResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.has_leader_hint()) {
    leader_hint_ = new ::NodeEndpoint(*from.leader_hint_);
  } else {
    leader_hint_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:AddServerResult)
}

void AddServerResult::SharedCtor() {
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_hint_ = NULL;
}

AddServerResult::~AddServerResult() {
  // @@protoc_insertion_point(destructor:AddServerResult)
  SharedDtor();
}

void AddServerResult::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete leader_hint_;
}

void AddServerResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddServerResult::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddServerResult& AddServerResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_AddServerResult.base);
  return *internal_default_instance();
}


void AddServerResult::Clear() {
// @@protoc_insertion_point(message_clear_start:AddServerResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && leader_hint_ != NULL) {
    delete leader_hint_;
  }
  leader_hint_ = NULL;
  _internal_metadata_.Clear();
}

bool AddServerResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AddServerResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AddServerResult.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NodeEndpoint leader_hint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_leader_hint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AddServerResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AddServerResult)
  return false;
#undef DO_
}

void AddServerResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AddServerResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AddServerResult.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->status(), output);
  }

  // .NodeEndpoint leader_hint = 2;
  if (this->has_leader_hint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_leader_hint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AddServerResult)
}

::google::protobuf::uint8* AddServerResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AddServerResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AddServerResult.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->status(), target);
  }

  // .NodeEndpoint leader_hint = 2;
  if (this->has_leader_hint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_leader_hint(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AddServerResult)
  return target;
}

size_t AddServerResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AddServerResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string status = 1;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // .NodeEndpoint leader_hint = 2;
  if (this->has_leader_hint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *leader_hint_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddServerResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AddServerResult)
  GOOGLE_DCHECK_NE(&from, this);
  const AddServerResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddServerResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AddServerResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AddServerResult)
    MergeFrom(*source);
  }
}

void AddServerResult::MergeFrom(const AddServerResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AddServerResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.has_leader_hint()) {
    mutable_leader_hint()->::NodeEndpoint::MergeFrom(from.leader_hint());
  }
}

void AddServerResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AddServerResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddServerResult::CopyFrom(const AddServerResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AddServerResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddServerResult::IsInitialized() const {
  return true;
}

void AddServerResult::Swap(AddServerResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddServerResult::InternalSwap(AddServerResult* other) {
  using std::swap;
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(leader_hint_, other->leader_hint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddServerResult::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveServerRpc::InitAsDefaultInstance() {
  ::_RemoveServerRpc_default_instance_._instance.get_mutable()->old_server_ = const_cast< ::NodeEndpoint*>(
      ::NodeEndpoint::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveServerRpc::kOldServerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveServerRpc::RemoveServerRpc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_RemoveServerRpc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemoveServerRpc)
}
RemoveServerRpc::RemoveServerRpc(const RemoveServerRpc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_old_server()) {
    old_server_ = new ::NodeEndpoint(*from.old_server_);
  } else {
    old_server_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:RemoveServerRpc)
}

void RemoveServerRpc::SharedCtor() {
  old_server_ = NULL;
}

RemoveServerRpc::~RemoveServerRpc() {
  // @@protoc_insertion_point(destructor:RemoveServerRpc)
  SharedDtor();
}

void RemoveServerRpc::SharedDtor() {
  if (this != internal_default_instance()) delete old_server_;
}

void RemoveServerRpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveServerRpc::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveServerRpc& RemoveServerRpc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_RemoveServerRpc.base);
  return *internal_default_instance();
}


void RemoveServerRpc::Clear() {
// @@protoc_insertion_point(message_clear_start:RemoveServerRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && old_server_ != NULL) {
    delete old_server_;
  }
  old_server_ = NULL;
  _internal_metadata_.Clear();
}

bool RemoveServerRpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemoveServerRpc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NodeEndpoint old_server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_old_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemoveServerRpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemoveServerRpc)
  return false;
#undef DO_
}

void RemoveServerRpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemoveServerRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NodeEndpoint old_server = 1;
  if (this->has_old_server()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_old_server(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RemoveServerRpc)
}

::google::protobuf::uint8* RemoveServerRpc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemoveServerRpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NodeEndpoint old_server = 1;
  if (this->has_old_server()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_old_server(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemoveServerRpc)
  return target;
}

size_t RemoveServerRpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemoveServerRpc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NodeEndpoint old_server = 1;
  if (this->has_old_server()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *old_server_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveServerRpc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemoveServerRpc)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveServerRpc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveServerRpc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemoveServerRpc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemoveServerRpc)
    MergeFrom(*source);
  }
}

void RemoveServerRpc::MergeFrom(const RemoveServerRpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemoveServerRpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_old_server()) {
    mutable_old_server()->::NodeEndpoint::MergeFrom(from.old_server());
  }
}

void RemoveServerRpc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemoveServerRpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveServerRpc::CopyFrom(const RemoveServerRpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemoveServerRpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveServerRpc::IsInitialized() const {
  return true;
}

void RemoveServerRpc::Swap(RemoveServerRpc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveServerRpc::InternalSwap(RemoveServerRpc* other) {
  using std::swap;
  swap(old_server_, other->old_server_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveServerRpc::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveServerResult::InitAsDefaultInstance() {
  ::_RemoveServerResult_default_instance_._instance.get_mutable()->leader_hint_ = const_cast< ::NodeEndpoint*>(
      ::NodeEndpoint::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveServerResult::kStatusFieldNumber;
const int RemoveServerResult::kLeaderHintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveServerResult::RemoveServerResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_RemoveServerResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemoveServerResult)
}
RemoveServerResult::RemoveServerResult(const RemoveServerResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.has_leader_hint()) {
    leader_hint_ = new ::NodeEndpoint(*from.leader_hint_);
  } else {
    leader_hint_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:RemoveServerResult)
}

void RemoveServerResult::SharedCtor() {
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_hint_ = NULL;
}

RemoveServerResult::~RemoveServerResult() {
  // @@protoc_insertion_point(destructor:RemoveServerResult)
  SharedDtor();
}

void RemoveServerResult::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete leader_hint_;
}

void RemoveServerResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveServerResult::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveServerResult& RemoveServerResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_RemoveServerResult.base);
  return *internal_default_instance();
}


void RemoveServerResult::Clear() {
// @@protoc_insertion_point(message_clear_start:RemoveServerResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && leader_hint_ != NULL) {
    delete leader_hint_;
  }
  leader_hint_ = NULL;
  _internal_metadata_.Clear();
}

bool RemoveServerResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemoveServerResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RemoveServerResult.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NodeEndpoint leader_hint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_leader_hint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemoveServerResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemoveServerResult)
  return false;
#undef DO_
}

void RemoveServerResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemoveServerResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RemoveServerResult.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->status(), output);
  }

  // .NodeEndpoint leader_hint = 2;
  if (this->has_leader_hint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_leader_hint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RemoveServerResult)
}

::google::protobuf::uint8* RemoveServerResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemoveServerResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RemoveServerResult.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->status(), target);
  }

  // .NodeEndpoint leader_hint = 2;
  if (this->has_leader_hint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_leader_hint(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemoveServerResult)
  return target;
}

size_t RemoveServerResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemoveServerResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string status = 1;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // .NodeEndpoint leader_hint = 2;
  if (this->has_leader_hint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *leader_hint_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveServerResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemoveServerResult)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveServerResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveServerResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemoveServerResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemoveServerResult)
    MergeFrom(*source);
  }
}

void RemoveServerResult::MergeFrom(const RemoveServerResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemoveServerResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.has_leader_hint()) {
    mutable_leader_hint()->::NodeEndpoint::MergeFrom(from.leader_hint());
  }
}

void RemoveServerResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemoveServerResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveServerResult::CopyFrom(const RemoveServerResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemoveServerResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveServerResult::IsInitialized() const {
  return true;
}

void RemoveServerResult::Swap(RemoveServerResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveServerResult::InternalSwap(RemoveServerResult* other) {
  using std::swap;
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(leader_hint_, other->leader_hint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveServerResult::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SnapshotHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnapshotHeader::kLastIndexFieldNumber;
const int SnapshotHeader::kLastTermFieldNumber;
const int SnapshotHeader::kLastConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapshotHeader::SnapshotHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RaftProto_2eproto::scc_info_SnapshotHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SnapshotHeader)
}
SnapshotHeader::SnapshotHeader(const SnapshotHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      last_config_(from.last_config_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&last_index_, &from.last_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_term_) -
    reinterpret_cast<char*>(&last_index_)) + sizeof(last_term_));
  // @@protoc_insertion_point(copy_constructor:SnapshotHeader)
}

void SnapshotHeader::SharedCtor() {
  ::memset(&last_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_term_) -
      reinterpret_cast<char*>(&last_index_)) + sizeof(last_term_));
}

SnapshotHeader::~SnapshotHeader() {
  // @@protoc_insertion_point(destructor:SnapshotHeader)
  SharedDtor();
}

void SnapshotHeader::SharedDtor() {
}

void SnapshotHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SnapshotHeader::descriptor() {
  ::protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapshotHeader& SnapshotHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RaftProto_2eproto::scc_info_SnapshotHeader.base);
  return *internal_default_instance();
}


void SnapshotHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:SnapshotHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  last_config_.Clear();
  ::memset(&last_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_term_) -
      reinterpret_cast<char*>(&last_index_)) + sizeof(last_term_));
  _internal_metadata_.Clear();
}

bool SnapshotHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SnapshotHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 last_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 last_term = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NodeEndpoint last_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_last_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SnapshotHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SnapshotHeader)
  return false;
#undef DO_
}

void SnapshotHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SnapshotHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 last_index = 1;
  if (this->last_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last_index(), output);
  }

  // int32 last_term = 2;
  if (this->last_term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->last_term(), output);
  }

  // repeated .NodeEndpoint last_config = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->last_config_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->last_config(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SnapshotHeader)
}

::google::protobuf::uint8* SnapshotHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SnapshotHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 last_index = 1;
  if (this->last_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last_index(), target);
  }

  // int32 last_term = 2;
  if (this->last_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->last_term(), target);
  }

  // repeated .NodeEndpoint last_config = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->last_config_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->last_config(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SnapshotHeader)
  return target;
}

size_t SnapshotHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SnapshotHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NodeEndpoint last_config = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->last_config_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->last_config(static_cast<int>(i)));
    }
  }

  // int32 last_index = 1;
  if (this->last_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last_index());
  }

  // int32 last_term = 2;
  if (this->last_term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last_term());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SnapshotHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SnapshotHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapshotHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapshotHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SnapshotHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SnapshotHeader)
    MergeFrom(*source);
  }
}

void SnapshotHeader::MergeFrom(const SnapshotHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SnapshotHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  last_config_.MergeFrom(from.last_config_);
  if (from.last_index() != 0) {
    set_last_index(from.last_index());
  }
  if (from.last_term() != 0) {
    set_last_term(from.last_term());
  }
}

void SnapshotHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SnapshotHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapshotHeader::CopyFrom(const SnapshotHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SnapshotHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapshotHeader::IsInitialized() const {
  return true;
}

void SnapshotHeader::Swap(SnapshotHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapshotHeader::InternalSwap(SnapshotHeader* other) {
  using std::swap;
  CastToBase(&last_config_)->InternalSwap(CastToBase(&other->last_config_));
  swap(last_index_, other->last_index_);
  swap(last_term_, other->last_term_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SnapshotHeader::GetMetadata() const {
  protobuf_RaftProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RaftProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NodeEndpoint* Arena::CreateMaybeMessage< ::NodeEndpoint >(Arena* arena) {
  return Arena::CreateInternal< ::NodeEndpoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PreVoteRpc* Arena::CreateMaybeMessage< ::PreVoteRpc >(Arena* arena) {
  return Arena::CreateInternal< ::PreVoteRpc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PreVoteResult* Arena::CreateMaybeMessage< ::PreVoteResult >(Arena* arena) {
  return Arena::CreateInternal< ::PreVoteResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RequestVoteRpc* Arena::CreateMaybeMessage< ::RequestVoteRpc >(Arena* arena) {
  return Arena::CreateInternal< ::RequestVoteRpc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RequestVoteResult* Arena::CreateMaybeMessage< ::RequestVoteResult >(Arena* arena) {
  return Arena::CreateInternal< ::RequestVoteResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AppendEntriesRpc_Entry* Arena::CreateMaybeMessage< ::AppendEntriesRpc_Entry >(Arena* arena) {
  return Arena::CreateInternal< ::AppendEntriesRpc_Entry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AppendEntriesRpc* Arena::CreateMaybeMessage< ::AppendEntriesRpc >(Arena* arena) {
  return Arena::CreateInternal< ::AppendEntriesRpc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AppendEntriesResult* Arena::CreateMaybeMessage< ::AppendEntriesResult >(Arena* arena) {
  return Arena::CreateInternal< ::AppendEntriesResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::InstallSnapshotRpc* Arena::CreateMaybeMessage< ::InstallSnapshotRpc >(Arena* arena) {
  return Arena::CreateInternal< ::InstallSnapshotRpc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::InstallSnapshotResult* Arena::CreateMaybeMessage< ::InstallSnapshotResult >(Arena* arena) {
  return Arena::CreateInternal< ::InstallSnapshotResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AddServerRpc* Arena::CreateMaybeMessage< ::AddServerRpc >(Arena* arena) {
  return Arena::CreateInternal< ::AddServerRpc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AddServerResult* Arena::CreateMaybeMessage< ::AddServerResult >(Arena* arena) {
  return Arena::CreateInternal< ::AddServerResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RemoveServerRpc* Arena::CreateMaybeMessage< ::RemoveServerRpc >(Arena* arena) {
  return Arena::CreateInternal< ::RemoveServerRpc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RemoveServerResult* Arena::CreateMaybeMessage< ::RemoveServerResult >(Arena* arena) {
  return Arena::CreateInternal< ::RemoveServerResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SnapshotHeader* Arena::CreateMaybeMessage< ::SnapshotHeader >(Arena* arena) {
  return Arena::CreateInternal< ::SnapshotHeader >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
